---
import BlogPostLayout from "@/layouts/blog-post.astro";
import { getCollection } from "astro:content";
import { Button } from "@/components/ui/button";

// Generate static paths for all blog posts
export async function getStaticPaths() {
    const blogPosts = await getCollection("blog");
    return blogPosts.map((post) => ({
        params: { slug: post.slug },
    }));
}

// Get the post data from collection by slug
const blogPosts = await getCollection("blog");
const post = blogPosts.find((p) => p.slug === Astro.params.slug);

if (!post) {
  throw new Error(`Post not found for slug: ${Astro.params.slug}`);
}

// Get the rendered content
const { Content } = await post.render();

// SEO metadata
const title = `${post.data.title} | Becky's Blog`;
const description = post.data.excerpt;
---

<BlogPostLayout title={title} description={description}>
    <main class="max-w-3xl mx-auto px-4 py-12">
        <div class="mb-8">
            <a href="/#blog">
                <Button variant="outline"> ‚Üê Back to all posts </Button>
            </a>
        </div>
        <article class="prose prose-lg dark:prose-invert max-w-none">
            <h1 class="text-3xl md:text-4xl font-bold mb-4">
                {post.data.title}
            </h1>
            <p class="text-muted-foreground mb-8">
                {
                    post.data.date.toLocaleDateString("en-US", {
                        year: "numeric",
                        month: "long",
                        day: "numeric",
                    })
                }
            </p>

            <div class="blog-content">
                <Content />
            </div>
        </article>
    </main>
</BlogPostLayout>

<script>
    function addCopyButtons() {
        const codeBlocks = document.querySelectorAll('pre');
        
        codeBlocks.forEach((pre) => {
            if (!pre.querySelector('.copy-button')) {
                const code = pre.querySelector('code');
                if (code) {
                    pre.style.position = 'relative';
                    const button = document.createElement('button');
                    button.className = 'copy-button';
                    button.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg>`;
                    
                    button.addEventListener('click', async () => {
                        await navigator.clipboard.writeText(code.textContent || '');
                        button.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><polyline points="20 6 9 17 4 12"></polyline></svg>`;
                        setTimeout(() => {
                            button.innerHTML = `<svg xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="9" y="9" width="13" height="13" rx="2" ry="2"></rect><path d="M5 15H4a2 2 0 0 1-2-2V4a2 2 0 0 1 2-2h9a2 2 0 0 1 2 2v1"></path></svg>`;
                        }, 2000);
                    });
                    
                    pre.appendChild(button);
                }
            }
        });
    }

    // Run on initial load
    addCopyButtons();
    
    // Also run when Astro swaps pages
    document.addEventListener('astro:page-load', addCopyButtons);
</script>

<style>
    .blog-content :global(h2) {
        font-size: 1.5rem;
        font-weight: 600;
        margin-top: 2rem;
        margin-bottom: 1rem;
    }

    .blog-content :global(p) {
        margin-bottom: 1.25rem;
        line-height: 1.7;
    }

    .blog-content :global(pre) {
        position: relative;
        padding: 1.5rem;
        margin: 1.5rem 0;
        border-radius: 0.5rem;
        background-color: rgb(var(--code-bg));
    }

    .blog-content :global(pre code) {
        font-family: var(--font-mono);
        font-size: 0.9rem;
        line-height: 1.5;
    }

    .blog-content :global(.copy-button) {
        position: absolute;
        top: 0.75rem;
        right: 0.75rem;
        padding: 0.5rem;
        border: none;
        background: transparent;
        cursor: pointer;
        opacity: 0.7;
        transition: all 0.2s;
        border-radius: 4px;
    }

    .blog-content :global(.copy-button) {
        color: rgb(225, 228, 232);
    }

    .blog-content :global(.copy-button:hover) {
        background: rgba(225, 228, 232, 0.1);
        opacity: 1;
        transform: scale(1.05);
    }

    :global(.dark) .blog-content :global(.copy-button) {
        color: rgb(225, 228, 232);
    }

    :global(.dark) .blog-content :global(.copy-button:hover) {
        background: rgba(255, 255, 255, 0.1);
        opacity: 1;
        transform: scale(1.05);
    }

    .blog-content :global(.copy-button svg) {
        width: 1rem;
        height: 1rem;
    }
</style>
